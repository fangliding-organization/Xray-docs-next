import{_ as i,r as l,o as r,c as p,a as n,b as e,d as s,w as t,e as a}from"./app-D-aWyVF7.js";const u={},d=n("h1",{id:"vless",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vless"},[n("span",null,"VLESS")])],-1),h=n("div",{class:"custom-container danger"},[n("p",{class:"custom-container-title"},"Danger"),n("p",null,"Currently, VLESS does not provide built-in encryption. Please use it with a reliable channel, such as TLS.")],-1),b=n("p",null,"VLESS is a stateless lightweight transport protocol that consists of inbound and outbound parts. It can serve as a bridge between Xray clients and servers.",-1),m=a(`<h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject"><span>InboundConfigurationObject</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;clients&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;5783a3e7-e373-51cd-8642-c83782b807c5&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;love@xray.com&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;flow&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xtls-rprx-vision&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;decryption&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;fallbacks&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;dest&quot;</span><span class="token operator">:</span> <span class="token number">80</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>clients</code>: [ <a href="#clientobject">ClientObject</a> ]</p></blockquote><p>An array representing a group of users approved by the server.</p><p>Each item in the array is a user <a href="#clientobject">ClientObject</a>.</p><blockquote><p><code>decryption</code>: &quot;none&quot;</p></blockquote><p>Currently, you need to specify <code>&quot;none&quot;</code>. It cannot be left empty. If the <code>decryption</code> value is not set correctly, you will receive an error message when using Xray or <code>-test</code>.</p><p>Note that <code>decryption</code> is at the same level as <code>clients</code>. The placement of <code>decryption</code> is different from the <code>encryption</code> in the vmess protocol because if there is a layer of agreed encryption, the server needs to decrypt it first to know which user it belongs to.</p>`,8),v=n("code",null,"fallbacks",-1),k=n("code",null,"fallbacks",-1),f=a(`<h3 id="clientobject" tabindex="-1"><a class="header-anchor" href="#clientobject"><span>ClientObject</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;5783a3e7-e373-51cd-8642-c83782b807c5&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;love@xray.com&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;flow&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xtls-rprx-vision&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>id</code>: string</p></blockquote><p>The user ID for VLESS. It can be any string less than 30 bytes or a valid UUID. Custom strings and their corresponding UUIDs are equivalent, which means you can use either of the following in the configuration file to identify the same user:</p><ul><li><code>&quot;id&quot;: &quot;ÊàëÁà±üçâËÄÅÂ∏à1314&quot;</code></li><li><code>&quot;id&quot;: &quot;5783a3e7-e373-51cd-8642-c83782b807c5&quot;</code> (This UUID is the mapping of the string &quot;ÊàëÁà± üçâ ËÄÅÂ∏à 1314&quot;)</li></ul>`,5),g={href:"https://github.com/XTLS/Xray-core/issues/158",target:"_blank",rel:"noopener noreferrer"},q=n("p",null,[e("You can use the command "),n("code",null,'xray uuid -i "custom string"'),e(" to generate the UUID corresponding to a custom string.")],-1),y=n("blockquote",null,[n("p",null,[e("You can also use the command "),n("code",null,"xray uuid"),e(" to generate a random UUID.")])],-1),_=n("blockquote",null,[n("p",null,[n("code",null,"level"),e(": number")])],-1),x=n("code",null,"level",-1),j=n("code",null,"level",-1),S=a("<blockquote><p><code>email</code>: string</p></blockquote><p>User email address used to differentiate traffic from different users (reflected in logs and statistics).</p><blockquote><p><code>flow</code>: string</p></blockquote><p>Flow control mode used to select the XTLS algorithm.</p><p>Currently, the following flow control modes are available for inbound protocols:</p><ul><li>No <code>flow</code> or empty string: Use regular TLS proxy.</li><li><code>xtls-rprx-vision</code>: Use the new XTLS mode, including inner-handshake random padding.</li></ul><p>Additionally, XTLS currently only supports TCP, mKCP, and DomainSocket as transport methods.</p>",7);function w(U,I){const o=l("RouterLink"),c=l("ExternalLinkIcon");return r(),p("div",null,[d,h,b,n("p",null,[e("Unlike "),s(o,{to:"/en/config/inbounds/vmess.html"},{default:t(()=>[e("VMess")]),_:1}),e(", VLESS does not rely on system time. The authentication method is still UUID-based.")]),m,n("blockquote",null,[n("p",null,[v,e(": [ "),s(o,{to:"/en/config/features/fallback.html"},{default:t(()=>[e("FallbackObject")]),_:1}),e(" ]")])]),n("p",null,[e("An array that contains a series of powerful fallback configurations (optional). The specific configuration for "),k,e(" can be found in the "),s(o,{to:"/en/config/features/fallback.html#fallbacks-configuration"},{default:t(()=>[e("FallbackObject")]),_:1}),e(" documentation.")]),f,n("p",null,[e("The mapping standard is described in the "),n("a",g,[e("VLESS UUID Mapping Standard: Mapping a Custom String to a UUIDv5"),s(c)]),e(".")]),q,y,_,n("p",null,[e("The user level that the connection will use to determine the corresponding "),s(o,{to:"/en/config/policy.html#levelpolicyobject"},{default:t(()=>[e("Local Policy")]),_:1}),e(".")]),n("p",null,[e("The value of "),x,e(" corresponds to the value of "),j,e(" in the "),s(o,{to:"/en/config/policy.html#policyobject"},{default:t(()=>[e("policy")]),_:1}),e(". If not specified, the default value is 0.")]),S])}const T=i(u,[["render",w],["__file","vless.html.vue"]]);export{T as default};
