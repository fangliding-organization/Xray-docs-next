import{_ as l,r as t,o as r,c as u,a as o,b as e,d as n,w as c,e as p}from"./app-D-aWyVF7.js";const i={},d=o("h1",{id:"socks",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#socks"},[o("span",null,"SOCKS")])],-1),k={href:"http://ftp.icm.edu.pl/packages/socks/socks4/SOCKS4.protocol",target:"_blank",rel:"noopener noreferrer"},h={href:"http://ftp.icm.edu.pl/packages/socks/socks4/SOCKS4.protocol",target:"_blank",rel:"noopener noreferrer"},v=p(`<div class="custom-container danger"><p class="custom-container-title">Danger</p><p>The SOCKS protocol does not provide encryption for transport and is not suitable for transmitting data over public networks.</p></div><p>The use of <code>SOCKS</code> inbound is more meaningful in a local area network or local environment, where it can be used to listen for incoming connections and provide local services to other programs.</p><h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject"><span>InboundConfigurationObject</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;auth&quot;</span><span class="token operator">:</span> <span class="token string">&quot;noauth&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;accounts&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-username&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;pass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-password&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;udp&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;ip&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>auth</code>: &quot;noauth&quot; | &quot;password&quot;</p></blockquote><p>The authentication method for the SOCKS protocol, supporting <code>&quot;noauth&quot;</code> for anonymous mode and <code>&quot;password&quot;</code> for username/password authentication.</p><p>The default value is <code>&quot;noauth&quot;</code>.</p><blockquote><p><code>accounts</code>: [ <a href="#accountobject">AccountObject</a> ]</p></blockquote><p>An array where each element represents a user account.</p><p>This option is only valid when <code>auth</code> is set to <code>&quot;password&quot;</code>.</p><p>The default value is an empty array.</p><blockquote><p><code>udp</code>: true | false</p></blockquote><p>Whether to enable UDP protocol support.</p><p>The default value is <code>false</code>.</p><blockquote><p><code>ip</code>: address</p></blockquote><p>When UDP is enabled, Xray needs to know the local IP address.</p><p>The default value is <code>&quot;127.0.0.1&quot;</code>.</p><blockquote><p><code>userLevel</code>: number</p></blockquote>`,18),b=o("code",null,"userLevel",-1),m=o("code",null,"level",-1),q=p(`<h3 id="accountobject" tabindex="-1"><a class="header-anchor" href="#accountobject"><span>AccountObject</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-username&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;pass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-password&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>user</code>: string</p></blockquote><p>The username as a string. Required.</p><blockquote><p><code>pass</code>: string</p></blockquote><p>The password as a string. Required.</p>`,6);function f(g,_){const s=t("ExternalLinkIcon"),a=t("RouterLink");return r(),u("div",null,[d,o("p",null,[e("The standard SOCKS protocol implementation is compatible with "),o("a",k,[e("SOCKS 4"),n(s)]),e(", SOCKS 4a, and "),o("a",h,[e("SOCKS 5"),n(s)]),e(".")]),v,o("p",null,[e("The user level that the connection will use to determine the corresponding "),n(a,{to:"/en/config/policy.html#levelpolicyobject"},{default:c(()=>[e("Local Policy")]),_:1}),e(".")]),o("p",null,[e("The value of "),b,e(" corresponds to the value of "),m,e(" in the "),n(a,{to:"/en/config/policy.html#policyobject"},{default:c(()=>[e("policy")]),_:1}),e(". If not specified, the default value is 0.")]),q])}const S=l(i,[["render",f],["__file","socks.html.vue"]]);export{S as default};
