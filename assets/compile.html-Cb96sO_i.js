import{_ as o,r as t,o as i,c as l,a as e,b as a,d as n,e as r}from"./app-BSedgHhy.js";const c={},d=e("h1",{id:"compile-the-document",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#compile-the-document"},[e("span",null,"Compile the document")])],-1),p=e("h2",{id:"preparatory-work",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#preparatory-work"},[e("span",null,"Preparatory Work")])],-1),u={href:"https://golang.org/",target:"_blank",rel:"noopener noreferrer"},h={class:"custom-container tip"},m=e("p",{class:"custom-container-title"},"TIP",-1),g={href:"https://golang.org/doc/install",target:"_blank",rel:"noopener noreferrer"},b=r(`<p>If you happen to use Windows, please <strong>make sure</strong> to use Powershell.</p><h2 id="pull-xray-source-code" tabindex="-1"><a class="header-anchor" href="#pull-xray-source-code"><span>Pull Xray source code</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/XTLS/Xray-core.git
<span class="token builtin class-name">cd</span> Xray-core <span class="token operator">&amp;&amp;</span> go mod download
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>If you have free time, you can try GitHub&#39;s official tool: <code>gh repo clone XTLS/Xray-core</code></p><p>Note: In a network environment where Google cannot be accessed normally, dependencies cannot be pulled normally, and <code>GOPROXY</code> needs to be set first:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://goproxy.io,direct
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="build-binary" tabindex="-1"><a class="header-anchor" href="#build-binary"><span>Build Binary</span></a></h2><div class="custom-container warning"><p class="custom-container-title">Warning</p><p>This command needs to be executed within Xray root directory.</p></div><h3 id="windows-powershell" tabindex="-1"><a class="header-anchor" href="#windows-powershell"><span>Windows(Powershell):</span></a></h3><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token variable">$env</span>:CGO_ENABLED=0
go build <span class="token operator">-</span>o xray<span class="token punctuation">.</span>exe <span class="token operator">-</span>trimpath <span class="token operator">-</span>ldflags <span class="token string">&quot;-s -w -buildid=&quot;</span> <span class="token punctuation">.</span><span class="token operator">/</span>main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="macos-linux" tabindex="-1"><a class="header-anchor" href="#macos-linux"><span>macOS, Linux:</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token assign-left variable">CGO_ENABLED</span><span class="token operator">=</span><span class="token number">0</span> go build <span class="token parameter variable">-o</span> xray <span class="token parameter variable">-trimpath</span> <span class="token parameter variable">-ldflags</span> <span class="token string">&quot;-s -w -buildid=&quot;</span> ./main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Running the above command will generate an xray executable file in the directory.</p><div class="custom-container tip"><p class="custom-container-title">Tip</p><p>If you need to compile a program that can be debugged, i.e., you can use dlv to attach to the running program for debugging, please remove the &#39;-w -s&#39; options from the ldflags.</p><ul><li>w option disables the generation of debug information. After using this option, gdb cannot be used for debugging.</li><li>s option disables the symbol table. PS: Actually, debugging with vscode or other IDEs seems to be more convenient.</li></ul><h2 id="cross-compilation" tabindex="-1"><a class="header-anchor" href="#cross-compilation"><span>Cross compilation:</span></a></h2><p>Here, we take the example of compiling to a Linux server in a Windows (Powershell) environment:</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token variable">$env</span>:CGO_ENABLED=0
<span class="token variable">$env</span>:GOOS=<span class="token string">&quot;linux&quot;</span>
<span class="token variable">$env</span>:GOARCH=<span class="token string">&quot;amd64&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>go build -o xray -trimpath -ldflags &quot;-s -w -buildid=&quot; ./main\`\`\`</p><p>After uploading to the server, remember to execute <code>chmod +x xray</code> in the server terminal.</p><div class="custom-container tip"><p class="custom-container-title">Tip</p><p>Execute <code>go tool dist list</code> to view all supported systems and architectures.</p></div></div><h2 id="reproducible-build" tabindex="-1"><a class="header-anchor" href="#reproducible-build"><span>Reproducible Build:</span></a></h2><p>Following the above steps, it is possible to compile and release an identical binary file as the one in Release.</p><div class="custom-container warning"><p class="custom-container-title">Warning</p><p>Please confirm that you are using the same Golang version as the one used to compile the release.</p></div>`,17);function v(f,k){const s=t("ExternalLinkIcon");return i(),l("div",null,[d,p,e("p",null,[a("Xray uses "),e("a",u,[a("Golang"),n(s)]),a(" as its programming language, so you need to install the latest version of Golang first in order to compile.")]),e("div",h,[m,e("p",null,[a("Install Golang: "),e("a",g,[a("golang.org/doc/install"),n(s)])])]),b])}const x=o(c,[["render",v],["__file","compile.html.vue"]]);export{x as default};
