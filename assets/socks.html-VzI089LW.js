import{_ as c,r as t,o as r,c as i,a as n,b as s,d as e,w as o,e as l}from"./app-BSedgHhy.js";const u={},d=n("h1",{id:"socks",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#socks"},[n("span",null,"Socks")])],-1),k={href:"http://ftp.icm.edu.pl/packages/socks/socks4/SOCKS4.protocol",target:"_blank",rel:"noopener noreferrer"},v=l(`<div class="custom-container danger"><p class="custom-container-title">Danger</p><p>The Socks protocol does not provide encryption for transmission and is not suitable for transmitting data over public networks.</p></div><h2 id="outboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#outboundconfigurationobject"><span>OutboundConfigurationObject</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;servers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span>
      <span class="token property">&quot;users&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test user&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;pass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test pass&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>servers</code>: [ <a href="#serverobject">ServerObject</a> ]</p></blockquote><p>An array representing a list of Socks servers, where each item is a server configuration.</p><h3 id="serverobject" tabindex="-1"><a class="header-anchor" href="#serverobject"><span>ServerObject</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span>
  <span class="token property">&quot;users&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test user&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;pass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test pass&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>address</code>: address</p></blockquote><p>The server address. Required.</p><div class="custom-container tip"><p class="custom-container-title">Tip</p><p>Only connections to Socks 5 servers are supported.</p></div><blockquote><p><code>port</code>: number</p></blockquote><p>The server port. Required.</p><blockquote><p><code>users</code>: [ <a href="#userobject">UserObject</a> ]</p></blockquote><p>An array representing a list of users. Each item in the array is a user configuration.</p><p>When the list is not empty, the Socks client will authenticate using the user information. If not specified, no authentication is performed.</p><p>The default value is an empty array.</p><h4 id="userobject" tabindex="-1"><a class="header-anchor" href="#userobject"><span>UserObject</span></a></h4><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test user&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;pass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test pass&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>user</code>: string</p></blockquote><p>The username. Required.</p><blockquote><p><code>pass</code>: string</p></blockquote><p>The password. Required.</p><blockquote><p><code>level</code>: number</p></blockquote>`,23),b=n("code",null,"level",-1),m=n("code",null,"level",-1);function q(h,g){const p=t("ExternalLinkIcon"),a=t("RouterLink");return r(),i("div",null,[d,n("p",null,[s("The Socks protocol is a standard protocol implementation that is compatible with "),n("a",k,[s("Socks 5"),e(p)]),s(".")]),v,n("p",null,[s("The user level. Connections will use the corresponding "),e(a,{to:"/en/config/policy.html#levelpolicyobject"},{default:o(()=>[s("local policy")]),_:1}),s(" associated with this user level.")]),n("p",null,[s("The "),b,s(" value corresponds to the "),m,s(" value in the "),e(a,{to:"/en/config/policy.html#policyobject"},{default:o(()=>[s("policy")]),_:1}),s(". If not specified, the default value is 0.")])])}const y=c(u,[["render",q],["__file","socks.html.vue"]]);export{y as default};
