import{_ as n,r as s,o as t,c,a as o,b as e,d as i,w as d,e as p}from"./app-fP3O39Su.js";const l={},r=o("h1",{id:"domain-socket",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#domain-socket"},[o("span",null,"Domain Socket")])],-1),u={class:"custom-container danger"},k=o("p",{class:"custom-container-title"},"警告",-1),m=o("code",null,"listen",-1),b=p(`<p>Domain Socket 使用标准的 Unix domain socket 来传输数据。</p><p>它的优势是使用了操作系统内建的传输通道，而不会占用网络缓存。 理论上相比起本地环回网络（local loopback）来说，Domain socket 速度略快一些。</p><p>目前仅可用于支持 Unix domain socket 的平台，如 Linux 和 macOS。在 Windows 10 Build 17036 前不可用。</p><p>如果指定了 domain socket 作为传输方式，在入站出站代理中配置的端口和 IP 地址将会失效，所有的传输由 domain socket 取代。</p><h2 id="domainsocketobject" tabindex="-1"><a class="header-anchor" href="#domainsocketobject"><span>DomainSocketObject</span></a></h2><p><code>DomainSocketObject</code> 对应传输配置的 <code>dsSettings</code> 项。</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/path/to/ds/file&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;abstract&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;padding&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>path</code>: string</p></blockquote><p>一个合法的文件路径。</p><div class="custom-container danger"><p class="custom-container-title">警告</p><p>在运行 Xray 之前，这个文件必须不存在。</p></div><blockquote><p><code>abstract</code>: true | false</p></blockquote><p>是否为 abstract domain socket，默认值 <code>false</code>。</p><blockquote><p><code>padding</code>: true | false</p></blockquote><p>abstract domain socket 是否带 padding，默认值 <code>false</code>。</p>`,14);function _(h,v){const a=s("RouterLink");return t(),c("div",null,[r,o("div",u,[k,o("p",null,[e("推荐写到 "),i(a,{to:"/config/inbound.html"},{default:d(()=>[e("inbounds")]),_:1}),e(" 的 "),m,e(" 处，传输方式可选 TCP、WebSocket、HTTP/2. 未来这里的 DomainSocket 可能会被弃用。")])]),b])}const q=n(l,[["render",_],["__file","domainsocket.html.vue"]]);export{q as default};
