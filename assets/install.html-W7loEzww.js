import{_ as h,r as o,o as c,c as u,a as e,b as r,d as n,w as a,e as s}from"./app-CtBnSVse.js";const _={},d=s('<h1 id="下载安装" tabindex="-1"><a class="header-anchor" href="#下载安装"><span>下载安装</span></a></h1><h2 id="平台支持" tabindex="-1"><a class="header-anchor" href="#平台支持"><span>平台支持</span></a></h2><p>Xray 在以下平台中可用：</p><ul><li>Windows 7 及之后版本（x86 / amd64 / arm32 / arm64）；</li><li>macOS 10.10 Yosemite 及之后版本（amd64 / arm64）；</li><li>Linux 2.6.23 及之后版本（x86 / amd64 / arm / arm64 / mips64 / mips / ppc64 / s390x / riscv64）； <ul><li>包括但不限于 Debian 7 / 8、Ubuntu 12.04 / 14.04 及后续版本、CentOS 7 / 8、Arch Linux 等；</li></ul></li><li>FreeBSD (x86 / amd64)；</li><li>OpenBSD (x86 / amd64)；</li><li>Dragonfly BSD (amd64)；</li></ul><h2 id="下载-xray" tabindex="-1"><a class="header-anchor" href="#下载-xray"><span>下载 Xray</span></a></h2>',5),p={href:"https://github.com/xtls/Xray-core/releases",target:"_blank",rel:"noopener noreferrer"},b=e("p",null,"下载对应平台的压缩包，解压后即可使用。",-1),f=e("h2",{id:"验证安装包",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#验证安装包"},[e("span",null,"验证安装包")])],-1),g=e("p",null,"Xray 提供两种验证方式：",-1),m=e("li",null,"ZIP 压缩包的 SHA1 / SHA256 摘要",-1),y=e("h2",{id:"windows-安装方式",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#windows-安装方式"},[e("span",null,"Windows 安装方式")])],-1),x={href:"https://github.com/xtls/Xray-core/releases",target:"_blank",rel:"noopener noreferrer"},k=e("code",null,"xray.exe",-1),w=e("a",{href:"./command"},"通过命令行带参数运行",-1),X={href:"https://scoop.sh",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/Qv2ray/mochi",target:"_blank",rel:"noopener noreferrer"},v=e("h2",{id:"macos-安装方式",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#macos-安装方式"},[e("span",null,"macOS 安装方式")])],-1),N={href:"https://github.com/xtls/Xray-core/releases",target:"_blank",rel:"noopener noreferrer"},A=e("code",null,"xray",-1),R={href:"https://brew.sh",target:"_blank",rel:"noopener noreferrer"},L=e("code",null,"brew install xray",-1),O={href:"https://github.com/N4FA/homebrew-xray",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/N4FA",target:"_blank",rel:"noopener noreferrer"},D=e("h2",{id:"linux-安装方式",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#linux-安装方式"},[e("span",null,"Linux 安装方式")])],-1),P=e("h3",{id:"安装脚本",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装脚本"},[e("span",null,"安装脚本")])],-1),U=e("p",null,"Linux Script",-1),I={href:"https://github.com/XTLS/Xray-install",target:"_blank",rel:"noopener noreferrer"},M=e("p",null,"One Click",-1),B={href:"https://github.com/kirin10000/Xray-script",target:"_blank",rel:"noopener noreferrer"},W={href:"https://github.com/proxysu/ProxySU",target:"_blank",rel:"noopener noreferrer"},F={href:"https://github.com/reeceyng/v2ray-agent",target:"_blank",rel:"noopener noreferrer"},G={href:"https://github.com/mack-a",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://github.com/reeceyng",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.com/jiuqi9997/Xray-yes",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/wulabing/Xray_onekey",target:"_blank",rel:"noopener noreferrer"},j=e("p",null,"Magisk",-1),E={href:"https://github.com/CerteKim/Xray4Magisk",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/E7KMbb/Xray_For_Magisk",target:"_blank",rel:"noopener noreferrer"},T=e("h3",{id:"arch-linux",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#arch-linux"},[e("span",null,"Arch Linux")])],-1),Z=e("h4",{id:"arch-user-repository",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#arch-user-repository"},[e("span",null,"Arch User Repository")])],-1),z={href:"https://wiki.archlinux.org/index.php/AUR_helpers",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/Jguer/yay",target:"_blank",rel:"noopener noreferrer"},q=e("code",null,"yay -S xray",-1),Y=e("h4",{id:"arch-linux-cn",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#arch-linux-cn"},[e("span",null,"Arch Linux CN")])],-1),$={href:"https://www.archlinuxcn.org/archlinux-cn-repo-and-mirror/",target:"_blank",rel:"noopener noreferrer"},ee=e("code",null,"pacman -S xray",-1),re=e("h3",{id:"linuxbrew",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#linuxbrew"},[e("span",null,"Linuxbrew")])],-1),ne=e("p",null,[r("Linuxbrew 包管理器的使用方式与 Homebrew 一致："),e("code",null,"brew install xray")],-1),te={id:"debian",tabindex:"-1"},oe={class:"header-anchor",href:"#debian"},le=e("h3",{id:"gentoo",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#gentoo"},[e("span",null,"Gentoo")])],-1),ae=e("p",null,"目前有三个第三方 Overlay 提供 Portage 安装脚本:",-1),se={href:"https://github.com/gentoo-mirror/touchfish-os/tree/master/net-proxy/Xray",target:"_blank",rel:"noopener noreferrer"},ie={href:"https://github.com/microcai/gentoo-zh",target:"_blank",rel:"noopener noreferrer"},he={href:"https://github.com/JuanCldCmt/Xray-Overlay",target:"_blank",rel:"noopener noreferrer"},ce=e("p",null,"使用 layman 或 eselect-repository 添加 Overlay 至本地，然后即可安装。",-1),ue=e("h2",{id:"docker-安装方式",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#docker-安装方式"},[e("span",null,"Docker 安装方式")])],-1),_e={href:"https://hub.docker.com/r/teddysun/xray",target:"_blank",rel:"noopener noreferrer"},de=s('<h3 id="docker-image-的文件结构" tabindex="-1"><a class="header-anchor" href="#docker-image-的文件结构"><span>Docker image 的文件结构</span></a></h3><ul><li><code>/etc/xray/config.json</code>：配置文件</li><li><code>/usr/bin/xray</code>：Xray 主程序</li><li><code>/usr/share/xray/geoip.dat</code>：IP 数据文件</li><li><code>/usr/share/xray/geosite.dat</code>：域名数据文件</li></ul><h1 id="图形化客户端" tabindex="-1"><a class="header-anchor" href="#图形化客户端"><span>图形化客户端</span></a></h1>',3),pe={href:"https://github.com/xiaorouji/openwrt-passwall",target:"_blank",rel:"noopener noreferrer"},be={href:"https://github.com/jerrykuku/luci-app-vssr",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://github.com/fw876/helloworld",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://github.com/yichya/luci-app-xray",target:"_blank",rel:"noopener noreferrer"},me={href:"https://github.com/yichya/openwrt-xray",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://github.com/2dust/v2rayN",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://github.com/Qv2ray/Qv2ray",target:"_blank",rel:"noopener noreferrer"},ke={href:"https://github.com/NetchX/Netch",target:"_blank",rel:"noopener noreferrer"},we={href:"https://github.com/2dust/v2rayNG",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://github.com/rurirei/Kitsunebi/tree/release_xtls",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://apps.apple.com/app/shadowrocket/id932747118",target:"_blank",rel:"noopener noreferrer"},ve={href:"https://apps.apple.com/app/stash/id1596063349",target:"_blank",rel:"noopener noreferrer"},Ne={href:"https://github.com/Qv2ray/Qv2ray",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://github.com/tzmax/V2RayXS",target:"_blank",rel:"noopener noreferrer"},Re=e("h1",{id:"uuid-生成器",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#uuid-生成器"},[e("span",null,"UUID 生成器")])],-1),Le={href:"https://www.uuidgenerator.net",target:"_blank",rel:"noopener noreferrer"};function Oe(Ce,De){const t=o("ExternalLinkIcon"),l=o("RouterLink"),i=o("Badge");return c(),u("div",null,[d,e("p",null,[r("预编译的二进制 ZIP 格式压缩包可在 "),e("a",p,[r("Github Releases"),n(t)]),r(" 中找到。")]),b,f,g,e("ul",null,[m,e("li",null,[r("可复现构建：请参照 "),n(l,{to:"/development/intro/compile.html"},{default:a(()=>[r("编译 Xray")]),_:1})])]),y,e("ul",null,[e("li",null,[r("在 "),e("a",x,[r("Github Releases"),n(t)]),r(" 下载适用于 Windows 平台的 ZIP 压缩包，解压后可得到可执行文件 "),k,r(" ，然后"),w,r(" 即可")]),e("li",null,[r("通过 "),e("a",X,[r("Scoop"),n(t)]),r(" 包管理器安装：Xray 已经被添加到 "),e("a",S,[r("Mochi"),n(t)]),r("。")])]),v,e("ul",null,[e("li",null,[r("在 "),e("a",N,[r("Github Releases"),n(t)]),r(" 下载适用于 macOS 平台的 ZIP 压缩包，解压后可得到可执行文件 "),A,r(" ，然后"),n(l,{to:"/document/command.html"},{default:a(()=>[r("通过命令行带参数运行")]),_:1}),r(" 即可")]),e("li",null,[r("通过 "),e("a",R,[r("Homebrew"),n(t)]),r(" 包管理器安装："),L]),e("li",null,[e("a",O,[r("homebrew-xray"),n(t)]),r(" 感谢"),e("a",C,[r("@N4FA"),n(t)])])]),D,P,e("ul",null,[e("li",null,[U,e("ul",null,[e("li",null,[e("a",I,[r("Xray-install"),n(t)])])])])]),e("ul",null,[e("li",null,[M,e("ul",null,[e("li",null,[e("a",B,[r("Xray-script"),n(t)])]),e("li",null,[e("a",W,[r("ProxySU"),n(t)])]),e("li",null,[e("a",F,[r("v2ray-agent"),n(t)]),r(" 感谢"),e("a",G,[r("@mack-a"),n(t)]),r(),e("a",Q,[r("@Reece"),n(t)])]),e("li",null,[e("a",H,[r("Xray-yes"),n(t)])]),e("li",null,[e("a",V,[r("Xray-onekey"),n(t)])])])]),e("li",null,[j,e("ul",null,[e("li",null,[e("a",E,[r("Xray4Magisk"),n(t)])]),e("li",null,[e("a",K,[r("Xray_For_Magisk"),n(t)])])])])]),T,Z,e("p",null,[r("需要使用 "),e("a",z,[r("AUR helpers"),n(t)]),r("，以 "),e("a",J,[r("yay"),n(t)]),r(" 为例，可通过 "),q,r(" 安装。")]),Y,e("p",null,[r("首先添加 "),e("a",$,[r("Arch Linux CN 仓库"),n(t)]),r("，然后在 root 用户下使用 "),ee,r(" 安装。")]),re,ne,e("h3",te,[e("a",oe,[e("span",null,[r("Debian "),n(i,{text:"WIP",type:"warning"})])])]),le,ae,e("ul",null,[e("li",null,[e("a",se,[r("CHN-beta/touchfish-os"),n(t)]),r(": 个人维护，适用于 systemD 系统")]),e("li",null,[e("a",ie,[r("Gentoo-zh"),n(t)]),r(": 社区维护，适用于 systemD 系统")]),e("li",null,[e("a",he,[r("JuanCldCmt/Xray-Overlay"),n(t)]),r("：个人维护，适用于 openRC 系统，同时使用 xray 用户组运行以提高安全性")])]),ce,ue,e("ul",null,[e("li",null,[e("a",_e,[r("teddysun/xray"),n(t)])])]),de,e("ul",null,[e("li",null,[r("OpenWrt "),e("ul",null,[e("li",null,[e("a",pe,[r("PassWall"),n(t)])]),e("li",null,[e("a",be,[r("Hello World"),n(t)])]),e("li",null,[e("a",fe,[r("ShadowSocksR Plus+"),n(t)])]),e("li",null,[e("a",ge,[r("luci-app-xray"),n(t)]),r(" ("),e("a",me,[r("openwrt-xray"),n(t)]),r(")")])])]),e("li",null,[r("Windows "),e("ul",null,[e("li",null,[e("a",ye,[r("v2rayN"),n(t)])]),e("li",null,[e("a",xe,[r("Qv2ray"),n(t)]),r(" （该项目已冻结存档）")]),e("li",null,[e("a",ke,[r("Netch (NetFilter & TUN/TAP)"),n(t)]),r(" （该项目已冻结存档）")])])]),e("li",null,[r("Android "),e("ul",null,[e("li",null,[e("a",we,[r("v2rayNG"),n(t)])]),e("li",null,[e("a",Xe,[r("Kitsunebi"),n(t)])])])]),e("li",null,[r("iOS / macOS（使用 ARM 芯片） "),e("ul",null,[e("li",null,[e("a",Se,[r("Shadowrocket"),n(t)])]),e("li",null,[e("a",ve,[r("Stash"),n(t)])])])]),e("li",null,[r("macOS（X86 芯片 / ARM 芯片） "),e("ul",null,[e("li",null,[e("a",Ne,[r("Qv2ray"),n(t)]),r(" （该项目已冻结存档）")]),e("li",null,[e("a",Ae,[r("V2RayXS"),n(t)])])])])]),Re,e("p",null,[r("第三方的 UUID 生成器 "),e("a",Le,[r("uuidgenerator.net"),n(t)])])])}const Ue=h(_,[["render",Oe],["__file","install.html.vue"]]);export{Ue as default};
