import{_ as s,r as t,o as i,c as h,a as e,b as r,d as n,e as l}from"./app-fP3O39Su.js";const c={},d=l('<h1 id="download-and-install" tabindex="-1"><a class="header-anchor" href="#download-and-install"><span>Download and Install</span></a></h1><h2 id="platform-support" tabindex="-1"><a class="header-anchor" href="#platform-support"><span>Platform Support</span></a></h2><ul><li>Xray is available on the following platforms: <ul><li>Windows 7 and later (x86 / amd64 / arm32 / arm64);</li><li>macOS 10.10 Yosemite and later (amd64 / arm64);</li><li>Linux 2.6.23 and later (x86 / amd64 / arm / arm64 / mips64 / mips / ppc64 / s390x / riscv64); <ul><li>Including but not limited to Debian 7 / 8, Ubuntu 12.04 / 14.04 and subsequent versions, CentOS 7 / 8, Arch Linux, etc.;</li></ul></li><li>FreeBSD (x86 / amd64);</li><li>OpenBSD (x86 / amd64);</li><li>Dragonfly BSD (amd64);</li></ul></li></ul><h2 id="download-xray" tabindex="-1"><a class="header-anchor" href="#download-xray"><span>Download Xray</span></a></h2>',4),u={href:"https://github.com/xtls/Xray-core/releases",target:"_blank",rel:"noopener noreferrer"},p=e("p",null,"Download the compressed package of the corresponding platform, and use it after decompression.",-1),_=e("h2",{id:"verify-the-installation-package",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#verify-the-installation-package"},[e("span",null,"Verify the Installation Package")])],-1),f=e("p",null,"Xray provides two verification methods:",-1),b=e("li",null,"SHA1/SHA256 digest of the ZIP archive",-1),g={href:"https://xtls.github.io/development/intro/compile.html",target:"_blank",rel:"noopener noreferrer"},m=e("h2",{id:"install-on-windows",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#install-on-windows"},[e("span",null,"Install on Windows")])],-1),y={href:"https://github.com/xtls/Xray-core/releases",target:"_blank",rel:"noopener noreferrer"},x=e("code",null,"xray.exe",-1),k=e("a",{href:"./command"},"parameters",-1),w={href:"https://scoop.sh/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/Qv2ray/mochi",target:"_blank",rel:"noopener noreferrer"},S=e("h2",{id:"install-on-macos",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#install-on-macos"},[e("span",null,"Install on macOS")])],-1),X={href:"https://github.com/xtls/Xray-core/releases",target:"_blank",rel:"noopener noreferrer"},I=e("code",null,"xray",-1),N=e("a",{href:"./command"},"parameters",-1),A={href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"},P=e("code",null,"brew install xray",-1),D={href:"https://github.com/N4FA/homebrew-xray",target:"_blank",rel:"noopener noreferrer"},R={href:"https://github.com/N4FA",target:"_blank",rel:"noopener noreferrer"},L=e("h2",{id:"install-on-linux",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#install-on-linux"},[e("span",null,"Install on Linux")])],-1),T=e("h3",{id:"install-script",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#install-script"},[e("span",null,"Install Script")])],-1),U=e("p",null,"Linux Script",-1),B={href:"https://github.com/XTLS/Xray-install",target:"_blank",rel:"noopener noreferrer"},O=e("p",null,"One Click",-1),F={href:"https://github.com/kirin10000/Xray-script",target:"_blank",rel:"noopener noreferrer"},M={href:"https://github.com/proxysu/ProxySU",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/reeceyng/v2ray-agent",target:"_blank",rel:"noopener noreferrer"},W={href:"https://github.com/mack-a",target:"_blank",rel:"noopener noreferrer"},G={href:"https://github.com/reeceyng",target:"_blank",rel:"noopener noreferrer"},Q=e("p",null,"Magisk",-1),V={href:"https://github.com/CerteKim/Xray4Magisk",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/E7KMbb/Xray_For_Magisk",target:"_blank",rel:"noopener noreferrer"},H=e("h3",{id:"arch-linux",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#arch-linux"},[e("span",null,"Arch Linux")])],-1),E=e("h4",{id:"arch-user-repository",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#arch-user-repository"},[e("span",null,"Arch User Repository")])],-1),K={href:"https://wiki.archlinux.org/index.php/AUR_helpers",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://github.com/Jguer/yay",target:"_blank",rel:"noopener noreferrer"},q=e("code",null,"yay -S xray",-1),z=e("h4",{id:"arch-linux-cn",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#arch-linux-cn"},[e("span",null,"Arch Linux CN")])],-1),J={href:"https://www.archlinuxcn.org/archlinux-cn-repo-and-mirror/",target:"_blank",rel:"noopener noreferrer"},Y=e("code",null,"pacman -S xray",-1),$=e("h3",{id:"linuxbrew",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#linuxbrew"},[e("span",null,"Linuxbrew")])],-1),ee=e("p",null,[r("The Linuxbrew package manager is used in the same way as Homebrew: "),e("code",null,"brew install xray")],-1),re={id:"debian",tabindex:"-1"},ne={class:"header-anchor",href:"#debian"},ae=e("h2",{id:"install-via-docker",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#install-via-docker"},[e("span",null,"Install via Docker")])],-1),te={href:"https://hub.docker.com/r/teddysun/xray",target:"_blank",rel:"noopener noreferrer"},le=l('<h3 id="the-file-structure-of-the-docker-image" tabindex="-1"><a class="header-anchor" href="#the-file-structure-of-the-docker-image"><span>The File Structure of the Docker Image</span></a></h3><ul><li><code>/etc/xray/config.json</code>: configuration file</li><li><code>/usr/bin/xray</code>: Xray main program</li><li><code>/usr/local/share/xray/geoip.dat</code>: IP data file</li><li><code>/usr/local/share/xray/geosite.dat</code>: domain name data file</li></ul><h1 id="gui-client" tabindex="-1"><a class="header-anchor" href="#gui-client"><span>GUI Client</span></a></h1>',3),oe={href:"https://github.com/xiaorouji/openwrt-passwall",target:"_blank",rel:"noopener noreferrer"},se={href:"https://github.com/jerrykuku/luci-app-vssr",target:"_blank",rel:"noopener noreferrer"},ie={href:"https://github.com/fw876/helloworld",target:"_blank",rel:"noopener noreferrer"},he={href:"https://github.com/yichya/luci-app-xray",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://github.com/yichya/openwrt-xray",target:"_blank",rel:"noopener noreferrer"},de={href:"https://github.com/2dust/v2rayN",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://github.com/Qv2ray/Qv2ray",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://github.com/NetchX/Netch",target:"_blank",rel:"noopener noreferrer"},_e={href:"https://github.com/2dust/v2rayNG",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://github.com/rurirei/Kitsunebi/tree/release_xtls",target:"_blank",rel:"noopener noreferrer"},be={href:"https://apps.apple.com/app/shadowrocket/id932747118",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://apps.apple.com/app/stash/id1596063349",target:"_blank",rel:"noopener noreferrer"},me={href:"https://github.com/Qv2ray/Qv2ray",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://github.com/tzmax/V2RayXS",target:"_blank",rel:"noopener noreferrer"},xe=e("h1",{id:"uuid-generator",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#uuid-generator"},[e("span",null,"UUID Generator")])],-1),ke={href:"https://www.uuidgenerator.net",target:"_blank",rel:"noopener noreferrer"};function we(ve,Se){const a=t("ExternalLinkIcon"),o=t("Badge");return i(),h("div",null,[d,e("p",null,[r("Precompiled binaries in ZIP format are available at "),e("a",u,[r("GitHub Releases"),n(a)]),r(" found in.")]),p,_,f,e("ul",null,[b,e("li",null,[r("Reproducible build: Please refer to "),e("a",g,[r("Compile Xray"),n(a)])])]),m,e("ul",null,[e("li",null,[r("Download the ZIP archive suitable for the Windows platform on "),e("a",y,[r("Github Releases"),n(a)]),r(". After decompression, you can get an executable file "),x,r(", and then run it with "),k,r(" through the command line.")]),e("li",null,[r("By "),e("a",w,[r("Scoop"),n(a)]),r(" Package manager installation: Xray has been added to "),e("a",v,[r("Mochi"),n(a)]),r(".")])]),S,e("ul",null,[e("li",null,[r("Download the ZIP archive suitable for the macOS platform on "),e("a",X,[r("Github Releases"),n(a)]),r(". After decompression, you can get an executable file "),I,r(", and then run it with "),N,r(" through the command line.")]),e("li",null,[r("By "),e("a",A,[r("Homebrew"),n(a)]),r(" Package manager installation: "),P]),e("li",null,[e("a",D,[r("homebrew-xray"),n(a)]),r(": Thanks "),e("a",R,[r("@N4FA"),n(a)])])]),L,T,e("ul",null,[e("li",null,[U,e("ul",null,[e("li",null,[e("a",B,[r("Xray-install"),n(a)])])])])]),e("ul",null,[e("li",null,[O,e("ul",null,[e("li",null,[e("a",F,[r("Xray-script"),n(a)])]),e("li",null,[e("a",M,[r("ProxySU"),n(a)])]),e("li",null,[e("a",C,[r("Xray-agent"),n(a)]),r(" Thanks "),e("a",W,[r("@mack-a"),n(a)]),r(),e("a",G,[r("@Reece"),n(a)])])])]),e("li",null,[Q,e("ul",null,[e("li",null,[e("a",V,[r("Xray4Magisk"),n(a)])]),e("li",null,[e("a",j,[r("Xray_For_Magisk"),n(a)])])])])]),H,E,e("p",null,[r("Need to use "),e("a",K,[r("AUR helpers"),n(a)]),r(", "),e("a",Z,[r("yay"),n(a)]),r(" as an example, it can be installed via "),q,r(".")]),z,e("p",null,[r("First add "),e("a",J,[r("Arch Linux CN"),n(a)]),r(" repository, and then use the root user "),Y,r("to install.")]),$,ee,e("h3",re,[e("a",ne,[e("span",null,[r("Debian "),n(o,{text:"WIP",type:"warning"})])])]),ae,e("ul",null,[e("li",null,[e("a",te,[r("teddysun/xray"),n(a)])])]),le,e("ul",null,[e("li",null,[r("OpenWrt "),e("ul",null,[e("li",null,[e("a",oe,[r("PassWall"),n(a)])]),e("li",null,[e("a",se,[r("Hello World"),n(a)])]),e("li",null,[e("a",ie,[r("ShadowSocksR Plus+"),n(a)])]),e("li",null,[e("a",he,[r("luci-app-xray"),n(a)]),r(" ("),e("a",ce,[r("openwrt-xray"),n(a)]),r(")")])])]),e("li",null,[r("Windows "),e("ul",null,[e("li",null,[e("a",de,[r("v2rayN"),n(a)])]),e("li",null,[e("a",ue,[r("Qv2ray"),n(a)]),r(" (This project has been and archived)")]),e("li",null,[e("a",pe,[r("Netch (NetFilter & TUN/TAP)"),n(a)]),r(" (This project has been and archived)")])])]),e("li",null,[r("Android "),e("ul",null,[e("li",null,[e("a",_e,[r("v2rayNG"),n(a)])]),e("li",null,[e("a",fe,[r("Kitsunebi"),n(a)])])])]),e("li",null,[r("iOS / macOS (ARM) "),e("ul",null,[e("li",null,[e("a",be,[r("Shadowrocket"),n(a)])]),e("li",null,[e("a",ge,[r("Stash"),n(a)])])])]),e("li",null,[r("macOS (X86/ARM) "),e("ul",null,[e("li",null,[e("a",me,[r("Qv2ray"),n(a)]),r(" (This project has been and archived)")]),e("li",null,[e("a",ye,[r("V2RayXS"),n(a)])])])])]),xe,e("p",null,[r("Third-party UUID generator "),e("a",ke,[r("uuidgenerator.net"),n(a)])])])}const Ie=s(c,[["render",we],["__file","install.html.vue"]]);export{Ie as default};
